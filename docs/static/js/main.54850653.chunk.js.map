{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","id","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","process","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","i","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,GAAG,QACHC,KAAK,OACLC,YAAY,2BACZC,MAAOX,EACPY,SArBc,SAACT,GACvBF,EAAeE,EAAEU,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAIbC,EAJa,iDAImCC,UAAUH,GAJ7C,6BAI2EI,oCAJ3E,SAMAC,MAAOH,GANP,cAMbI,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXV,IAAKS,EAAIE,OAAOC,iBAAiBZ,QAbtB,kBAiBZO,GAjBY,4CAAH,sDCCPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACCH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAI3B,CAACpB,IAEIqB,EDhByBK,CAAc1B,GAAjCa,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAErB,OACI,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SAEYH,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,aAAagB,GAAC,GAENhB,GADEA,EAAIlB,aEd7BmC,EAAS,WAAO,IAAD,EAEY5C,mBAAS,CAAC,QAFtB,mBAEjB6C,EAFiB,KAEL9C,EAFK,KAIxB,OACI,gCACI,oBAAIU,GAAG,QAAP,oBACA,oBAAIA,GAAG,WAAP,iCACA,cAAC,EAAD,CAAaV,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWnB,KAAK,SAAAV,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,QAMlB,oE,MCnBZ8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.54850653.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ){\n            // trim() method removes whitespace from both sides of a string.\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                id=\"input\"\n                type=\"text\"\n                placeholder=\"Write here to find a gif\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async( category ) => {\n\n    // API SEARCH ENDPOINT\n    // You need a key: developers.giphy.com\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${process.env.REACT_APP_API_KEY}`\n\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading} = useFetchGifs( category );\n\n    return (\n        <>\n            <h3> { category } </h3>\n\n            { loading && <p>Loading...</p> }\n\n            <div className=\"card-grid\">\n                    {\n                        images.map( img => (\n                            <GifGridItem i\n                                key={ img.id }\n                                {...img}\n                            />\n                        ))\n                    }\n                \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState} from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs( category )\n            .then( imgs => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n            })\n\n    },[category])\n\n    return state; // { data: [], loading: true }\n\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifApp = () => {\n\n    const [categories, setCategories] = useState(['Gif']);\n\n    return (\n        <div>\n            <h2 id=\"title\">GIFAPP</h2>\n            <h3 id=\"subtitle\">a GIF search engine</h3>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                        key={ category }\n                        category={ category } \n                        />\n                    ))\n                }\n            </ol>\n            <h5>Made by Iv√°n Urra &copy; 2021</h5>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}